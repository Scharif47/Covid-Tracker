{"version":3,"sources":["components/CardBox.js","components/AppMenu.js","utils/sortUtil.js","components/Table.js","components/Diagram.js","utils/mapData.js","components/Map.js","components/App.js","reportWebVitals.js","index.js"],"names":["CardBox","cases","total","title","active","caseColor","recColor","deathColor","props","Card","onClick","className","CardContent","numeral","format","Typography","color","AppMenu","useState","countries","setCountries","country","setCountry","countryData","setCountryData","tableData","setTableData","fetchMapData","setFetchMapData","inputCases","setInputCases","useEffect","fetch","then","response","json","data","map","name","value","countryInfo","iso2","sort","a","b","sortData","onCountryChange","event","countryCode","target","url","sideBarData","mapData","dynCountry","onCasesChange","style","FormControl","Select","onChange","variant","MenuItem","e","todayCases","todayRecovered","recovered","todayDeaths","deaths","Table","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","Diagram","setData","diagramFunction","lastPoint","diagramData","date","currentPoint","x","y","push","graphData","length","datasets","backgroundColor","borderColor","casesColors","hex","multiplier","Circle","center","lat","long","fillOpacity","pathOptions","Math","sqrt","Popup","backgroundImage","flag","Map","zoom","MyComponent","useMap","setView","MapContainer","TileLayer","attribution","App","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26475dc7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport numeral from \"numeral\";\r\nimport \"./CardBox.css\";\r\n\r\nfunction CardBox({\r\n  cases,\r\n  total,\r\n  title,\r\n  active,\r\n  caseColor,\r\n  recColor,\r\n  deathColor,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`cardBox ${active && \"cardBox--selected\"} ${\r\n        caseColor && \"cardBox--red\"\r\n      } ${recColor && \"cardBox--green\"} ${deathColor && \"cardBox--purple\"}`}\r\n    >\r\n      <CardContent>\r\n        <h3 className=\"cardBox__total\">{numeral(total).format(\"0,0\")}</h3>\r\n\r\n        <Typography className=\"cardBox__cases\" color=\"textSecondary\">\r\n          +{numeral(cases).format(\"0,0\")} new cases\r\n        </Typography>\r\n\r\n        <Typography className=\"cardBox__title\" color=\"textPrimary\">\r\n          {title}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport CardBox from \"./CardBox\";\r\nimport { sortData } from \"../utils/sortUtil\";\r\nimport \"./AppMenu.css\";\r\n\r\nfunction AppMenu(props) {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryData, setCountryData] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [fetchMapData, setFetchMapData] = useState([]);\r\n  const [inputCases, setInputCases] = useState(\"cases\");\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => {\r\n            return {\r\n              name: country.country,\r\n              value: country.countryInfo.iso2,\r\n            };\r\n          });\r\n          setCountries(countries);\r\n          setTableData(sortData(data));\r\n          setFetchMapData(data);\r\n        });\r\n    };\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryData(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryData(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.sideBarData(tableData);\r\n    props.mapData(fetchMapData);\r\n    const countryInfo = countryData.countryInfo;\r\n    if (countryInfo) {\r\n      props.dynCountry(countryInfo);\r\n    }\r\n  }, [tableData, countryData, fetchMapData]);\r\n\r\n  props.onCasesChange(inputCases);\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <CardContent>\r\n        <h2>\r\n          <span style={{ color: \"red\" }}>Live</span> Covid Cases\r\n        </h2>\r\n        <FormControl className=\"menu__dropdown\">\r\n          <Select onChange={onCountryChange} value={country} variant=\"outlined\">\r\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\r\n            {countries.map((country) => {\r\n              return (\r\n                <MenuItem key={country.name} value={country.value}>\r\n                  {country.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </CardContent>\r\n\r\n      <div className=\"menu__details\">\r\n        <CardBox\r\n          active={inputCases === \"cases\"}\r\n          caseColor\r\n          onClick={(e) => setInputCases(\"cases\")}\r\n          cases={countryData.todayCases}\r\n          total={countryData.cases}\r\n          title=\"Confirmed\"\r\n        />\r\n        <CardBox\r\n          active={inputCases === \"recovered\"}\r\n          recColor\r\n          onClick={(e) => setInputCases(\"recovered\")}\r\n          className=\"card-recovered\"\r\n          cases={countryData.todayRecovered}\r\n          total={countryData.recovered}\r\n          title=\"Recovered\"\r\n        />\r\n        <CardBox\r\n          active={inputCases === \"deaths\"}\r\n          deathColor\r\n          onClick={(e) => setInputCases(\"deaths\")}\r\n          cases={countryData.todayDeaths}\r\n          total={countryData.deaths}\r\n          title=\"Deaths\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppMenu;\r\n","export const sortData = (data) => {\r\n  const listedData = [...data];\r\n\r\n  return listedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n","import React from \"react\";\r\nimport numeral from \"numeral\"\r\nimport \"./Table.css\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n          {countries.map(({ country, cases }) => {\r\n            return (\r\n              <tr key={country}>\r\n                <td>{country}</td>\r\n                <td><strong>{numeral(cases).format(\"0,0\")}</strong></td>\r\n              </tr>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nfunction Diagram({ inputCases, ...props }) {\r\n  const [data, setData] = useState({});\r\n\r\n\r\n  const diagramFunction = (data) => {\r\n    const diagramData = [];\r\n    let lastPoint;\r\n\r\n    for (let date in data.cases) {\r\n      if (lastPoint) {\r\n        const currentPoint = {\r\n          x: date,\r\n          y: data[inputCases][date] - lastPoint,\r\n        };\r\n        diagramData.push(currentPoint);\r\n      }\r\n      lastPoint = data[inputCases][date];\r\n    }\r\n    return diagramData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const graphData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=90\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setData(diagramFunction(data));\r\n        });\r\n    };\r\n    graphData();\r\n  }, [inputCases]);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          options={options}\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(207, 0, 15, 0.3)\",\r\n                borderColor: \"rgba(240, 52, 52, 1)\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Diagram;\r\n","import React from \"react\";\r\nimport {Circle, Popup} from \"react-leaflet\";\r\nimport numeral from \"numeral\"\r\n\r\nconst casesColors = {\r\n  cases: {\r\n    hex: \"#8B0000\",\r\n    multiplier: 250,\r\n  },\r\n  recovered: {\r\n    hex: \"#228B22\",\r\n    multiplier: 250,\r\n  },\r\n  deaths: {\r\n    hex: \"#4B0082\",\r\n    multiplier: 800,\r\n  },\r\n};\r\n\r\nexport const mapData = (data, inputCases = \"cases\") => {\r\n  return data.map((country) => {\r\n    return (\r\n      <Circle \r\n      key={country.country}\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      // color={casesColors[inputCases].hex}\r\n      pathOptions={{\r\n        color: casesColors[inputCases].hex\r\n      }}\r\n      radius={Math.sqrt(country[inputCases]) * casesColors[inputCases].multiplier}\r\n      >\r\n        <Popup>\r\n        <div className=\"popup\">\r\n            <div\r\n              className=\"popup__flag\"\r\n              style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            />\r\n            <div className=\"popup__name\">{country.country}</div>\r\n            <div className=\"popup__cases\">\r\n              Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"popup__recovered\">\r\n              Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"popup__deaths\">\r\n              Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n          </div>\r\n        </Popup>\r\n      </Circle>\r\n    )\r\n  })\r\n}","import React from \"react\";\r\nimport \"./Map.css\";\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\r\nimport { mapData } from \"../utils/mapData\";\r\n\r\nfunction Map({ center, zoom, countries, inputCases }) {\r\n  function MyComponent() {\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <MyComponent />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {mapData(countries, inputCases)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState } from \"react\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport AppMenu from \"./AppMenu\";\nimport Table from \"./Table\";\nimport Diagram from \"../components/Diagram\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [countryData, setCountryData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 52.4912, lng: -1.9348 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [inputCases, setInputCases] = useState(\"cases\");\n\n  const sideData = (tableData) => {\n    setCountryData(tableData);\n  };\n\n  const dynCountry = (countryInfo) => {\n    if (countryInfo) {\n      setMapCenter([countryInfo.lat, countryInfo.long]);\n      setMapZoom(4);\n    }\n  };\n\n  const mapData = (fetchMapData) => {\n    setMapCountries(fetchMapData);\n  };\n\n  const onCasesChange = (inputCases) => {\n    setInputCases(inputCases);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__main\">\n        <h1>Covid-Tracker</h1>\n\n        <Card className=\"app__menu\">\n          <AppMenu\n            onCasesChange={onCasesChange}\n            dynCountry={dynCountry}\n            mapData={mapData}\n            sideBarData={sideData}\n          />\n        </Card>\n\n        <div className=\"app__map\">\n          <Map\n            inputCases={inputCases}\n            countries={mapCountries}\n            center={mapCenter}\n            zoom={mapZoom}\n          />\n        </div>\n      </div>\n\n      <Card className=\"app__side\">\n        <CardContent>\n          <h3 className=\"app__tableTitle\">Cases by Country</h3>\n          <Table countries={countryData} />\n          <h3 className=\"app__diagramTitle\">Worldwide {inputCases}</h3>\n          <Diagram className=\"app__diagram\" inputCases={inputCases} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}